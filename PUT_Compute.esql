CREATE COMPUTE MODULE PUT_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE carModel CHAR InputRoot.JSON.Data.model;
		DECLARE carColor CHAR InputRoot.JSON.Data.color;
		DECLARE carId INT InputRoot.JSON.Data.id;

		DECLARE result ROW;

		SET result.cars[] = PASSTHRU('SELECT * FROM CARS WHERE id = ?',
		carId);

		IF carId IS NULL THEN
			SET OutputRoot.JSON.Data.status = 'error';
			SET OutputRoot.JSON.Data.message = 'Id IS NULL';
		ELSE
			IF CARDINALITY(result.cars[]) = 0 THEN
				SET OutputRoot.JSON.Data.status = 'error';
				SET OutputRoot.JSON.Data.message = 'Car with given Id does not exist';
			ELSE
				-- Inserir um novo carro na tabela cars com os valores fornecidos
				PASSTHRU(
				'UPDATE cars SET model = ?, color = ? WHERE id = ?;',
				carModel, carColor, carId
				);
				-- Configurar resposta de sucesso
				SET OutputRoot.JSON.Data.status = 'success';
				-- Retornar TRUE para indicar sucesso
				RETURN TRUE;
			END IF;
		END IF;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;